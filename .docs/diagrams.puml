@startuml "hrm-microservice"

' >>>>>> style
!include <C4/C4_Component>
AddElementTag(service, $bgColor="#b5800d", $fontColor="white")
AddElementTag(entity, $shape=EightSidedShape())
AddElementTag(projection, $shape=RoundedBoxShape())

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/angular.puml
!include DEVICONS/java.puml
!include DEVICONS/mysql.puml
!include FONTAWESOME/users.puml
' >>>>>> end style

' >>>>>> Components
Person(user, "Consumer", $sprite="users")

System_Ext(gateway, "API Gateway", "exposes every operation possible with mutations and queries")

System_Boundary(hrm, "HRM Microservice") {
    Component(resource, "Resource Service", "quarkus", "Receive every command and choses for wich client service to delegate.\n", $sprite="java", $tags="service")
    Component(cmd, "Operation", , "Command or operation that will be executed by the RCS instance\n", $tags="entity")
    ComponentDb(ej, "Event Journal", , "Persistent data about every comand executed for any users. It must implement an offset that identifyies every command.\n", $sprite="mysql")
    ComponentDb(cmd_history, "Query DB", , "Exposes for a query api (graphql) the various states of each event on the system\n", $sprite="mysql")
    Component(cmd_proj, "Operations\nProjection", , "Gets all updates from the event journal and emits it as a queriable resource", $sprite="java")
    Component(send_proj, "Send command", , "Selects and sends for the correct instance and keeps one eye on the event updates", $tags="projection", $sprite="java")
}

System_Ext(rcs, "RCS Instance")
' >>>>>> end components

user -> gateway : consumes
gateway -> resource : consumes
gateway -> cmd_history: queries
Rel_R(resource, cmd, "create")
cmd --> ej : persists
Rel_U(cmd_proj, cmd_history, "insert")
Rel_U(cmd_proj, ej, "read")
cmd -> send_proj : disptches to update operation
send_proj -> rcs

SHOW_LEGEND()

@enduml

@startuml "api-gateway"

' >>>>>> style
!include <C4/C4_Component>
AddElementTag(service, $bgColor="#b5800d", $fontColor="white")
AddElementTag(entity, $shape=EightSidedShape())
AddElementTag(projection, $shape=RoundedBoxShape())

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/angular.puml
!include DEVICONS/java.puml
!include DEVICONS/mysql.puml
!include FONTAWESOME/users.puml
' >>>>>> end style

' >>>>>> Components
Person(user, "Consumer", $sprite="users")

System_Boundary(gateway, "API Gateway") {
    Component(res, "Operation resolver", "quarkus", "Exposes every queriable operations as ", $sprite="java", $tags="service")
}

System_Ext(hrm, "HRM Microservice", "Source of comands data")
' >>>>>> end components

user -> res : consumes
res -> hrm : reads query db


SHOW_LEGEND()

@enduml
